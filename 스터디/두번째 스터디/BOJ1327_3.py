import sys
sys.stdin = open('input.txt')

from collections import deque
def bfs(v):
    cnt = 0
    queue = deque([(cnt, v)])
    visit = {}
    visit[v] = 0
    while queue:
        c, v = queue.popleft()
        for i in range(n - k + 1):
            tmp = v[i:i+k]
            tmp = v[:i] + tmp[::-1] + v[i+k:]
            if ''.join(tmp) not in visit:
                queue.append((c + 1, tmp[:]))
                visit[tmp] = c + 1
    #print(sorted(visit.items()), len(visit))
    print(sorted(visit.items(), key=lambda x: x[1]))


n, k = map(int, input().split())
numbers = ''.join(list(input().split()))
sorted_numbers = ''.join(sorted(numbers))
if sorted_numbers == numbers:
    print(0)
else:
    res = bfs(numbers)
    if res == None:
        print(-1)
    else:
        print(res)

# [('123456', 4), ('123654', 4), ('125436', 3), ('125634', 0), ('143256', 11), ('143652', 8), ('145236', 12), ('145632', 12), ('163254', 0), ('163452', 8), ('165234', 0), ('165432', 0), ('321456', 5), ('321654', 5), ('325416', 20), ('325614', 5), ('341256', 10), ('341652', 10), ('345216', 16), ('345612', 10), ('361254', 6), ('361452', 6), ('365214', 6), ('365412', 9), ('521436', 2), ('521634', 2), ('523416', 18), ('523614', 2), ('541236', 13), ('541632', 13), ('543216', 18), ('543612', 13), ('561234', 1), ('561432', 1), ('563214', 1), ('563412', 14)]
# [('123456', 3), ('123654', 2), ('125436', 2), ('125634', 1), ('143256', 4), ('143652', 3), ('145236', 3), ('145632', 2), ('163254', 1), ('163452', 2), ('165234', 0), ('165432', 1), ('321456', 4), ('321654', 3), ('325416', 5), ('325614', 4), ('341256', 5), ('341652', 4), ('345216', 6), ('345612', 5), ('361254', 2), ('361452', 3), ('365214', 3), ('365412', 4), ('521436', 3), ('521634', 2), ('523416', 4), ('523614', 3), ('541236', 4), ('541632', 3), ('543216', 5), ('543612', 4), ('561234', 1), ('561432', 2), ('563214', 2), ('563412', 3)]